{"ast":null,"code":"var _jsxFileName = \"/Users/junghoon/Documents/GitHub/caregiver_admin/src/components/Navbars/DemoNavbar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Navbar, NavbarToggler, NavbarBrand, Container } from \"reactstrap\";\nimport routes from \"routes.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Header(props) {\n  _s();\n\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [color, setColor] = React.useState(\"transparent\");\n  const sidebarToggle = React.useRef();\n  const location = useLocation();\n\n  const toggle = () => {\n    if (isOpen) {\n      setColor(\"transparent\");\n    } else {\n      setColor(\"dark\");\n    }\n\n    setIsOpen(!isOpen);\n  };\n\n  const getBrand = () => {\n    let brandName = \"Default Brand\";\n    routes.map((prop, key) => {\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n        brandName = prop.name;\n      }\n\n      return null;\n    });\n    return brandName;\n  };\n\n  const openSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    sidebarToggle.current.classList.toggle(\"toggled\");\n  };\n\n  const updateColor = () => {\n    if (window.innerWidth < 993 && isOpen) {\n      setColor(\"dark\");\n    } else {\n      setColor(\"transparent\");\n    }\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor.bind(this));\n  });\n  React.useEffect(() => {\n    if (window.innerWidth < 993 && document.documentElement.className.indexOf(\"nav-open\") !== -1) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    color: props.location.pathname.indexOf(\"full-screen-maps\") !== -1 ? \"dark\" : color,\n    expand: \"lg\",\n    className: props.location.pathname.indexOf(\"full-screen-maps\") !== -1 ? \"navbar-absolute fixed-top\" : \"navbar-absolute fixed-top \" + (color === \"transparent\" ? \"navbar-transparent \" : \"\"),\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbar-toggle\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            ref: sidebarToggle,\n            className: \"navbar-toggler\",\n            onClick: () => openSidebar(),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"navbar-toggler-bar bar1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"navbar-toggler-bar bar2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"navbar-toggler-bar bar3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavbarBrand, {\n          href: \"/\",\n          children: getBrand()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavbarToggler, {\n        onClick: toggle,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"navbar-toggler-bar navbar-kebab\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"navbar-toggler-bar navbar-kebab\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"navbar-toggler-bar navbar-kebab\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"ZpFSlktEOHDtHlaCXd7mIgodm04=\", false, function () {\n  return [useLocation];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/junghoon/Documents/GitHub/caregiver_admin/src/components/Navbars/DemoNavbar.js"],"names":["React","useLocation","Navbar","NavbarToggler","NavbarBrand","Container","routes","Header","props","isOpen","setIsOpen","useState","color","setColor","sidebarToggle","useRef","location","toggle","getBrand","brandName","map","prop","key","window","href","indexOf","layout","path","name","openSidebar","document","documentElement","classList","current","updateColor","innerWidth","useEffect","addEventListener","bind","className","pathname"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Navbar, NavbarToggler, NavbarBrand, Container } from \"reactstrap\";\n\nimport routes from \"routes.js\";\n\nfunction Header(props) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [color, setColor] = React.useState(\"transparent\");\n  const sidebarToggle = React.useRef();\n  const location = useLocation();\n  const toggle = () => {\n    if (isOpen) {\n      setColor(\"transparent\");\n    } else {\n      setColor(\"dark\");\n    }\n    setIsOpen(!isOpen);\n  };\n  const getBrand = () => {\n    let brandName = \"Default Brand\";\n    routes.map((prop, key) => {\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n        brandName = prop.name;\n      }\n      return null;\n    });\n    return brandName;\n  };\n  const openSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    sidebarToggle.current.classList.toggle(\"toggled\");\n  };\n  const updateColor = () => {\n    if (window.innerWidth < 993 && isOpen) {\n      setColor(\"dark\");\n    } else {\n      setColor(\"transparent\");\n    }\n  };\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor.bind(this));\n  });\n  React.useEffect(() => {\n    if (\n      window.innerWidth < 993 &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }, [location]);\n  return (\n    <Navbar\n      color={\n        props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n          ? \"dark\"\n          : color\n      }\n      expand=\"lg\"\n      className={\n        props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n          ? \"navbar-absolute fixed-top\"\n          : \"navbar-absolute fixed-top \" +\n            (color === \"transparent\" ? \"navbar-transparent \" : \"\")\n      }\n    >\n      <Container fluid>\n        <div className=\"navbar-wrapper\">\n          <div className=\"navbar-toggle\">\n            <button\n              type=\"button\"\n              ref={sidebarToggle}\n              className=\"navbar-toggler\"\n              onClick={() => openSidebar()}\n            >\n              <span className=\"navbar-toggler-bar bar1\" />\n              <span className=\"navbar-toggler-bar bar2\" />\n              <span className=\"navbar-toggler-bar bar3\" />\n            </button>\n          </div>\n          <NavbarBrand href=\"/\">{getBrand()}</NavbarBrand>\n        </div>\n        <NavbarToggler onClick={toggle}>\n          <span className=\"navbar-toggler-bar navbar-kebab\" />\n          <span className=\"navbar-toggler-bar navbar-kebab\" />\n          <span className=\"navbar-toggler-bar navbar-kebab\" />\n        </NavbarToggler>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}